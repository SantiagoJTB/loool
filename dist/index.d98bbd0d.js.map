{"mappings":"AEAe,MAAA,EACX,YAAY,CAAI,CAAE,CACd,IAAI,CAAC,IAAI,CAAG,EAAK,EAAE,CACnB,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,CACvB,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,CACvB,IAAI,CAAC,KAAK,CAAG,EAAK,KAAK,CAAC,IAAI,CAC5B,IAAI,CAAC,IAAI,CAAG,EAAK,IAAI,AACzB,CACJ,CDNA,MAAM,EAAY,EAAE,CAIpB,AAFe,SAAS,aAAa,CAAC,WAE/B,gBAAgB,CAAC,QAAS,KAC7B,QAAQ,GAAG,CAAC,iBACZ,SAAS,aAAa,CAAC,WAAW,KAAK,CAAC,UAAU,CAAG,SACrD,SAAS,aAAa,CAAC,UAAU,KAAK,CAAC,UAAU,CAAG,UACpD,GACJ,GAGA,MAAM,EAAiB,UACnB,QAAQ,GAAG,CAAC,kCACZ,GAAI,CACA,IAAM,EAAY,MAAM,MAAM,4EAIxB,EAAgB,AAHT,CAAA,MAAM,EAAU,IAAI,EAAjC,EAG2B,IAAI,CAC/B,IAAK,IAAM,KAAO,EACd,GAAI,EAAc,cAAc,CAAC,GAAM,KAY9B,EAAA,EAXW,IAAI,EAAQ,CAAa,CAAC,EAAI,EAY1D,EAAU,IAAI,CAAC,EAVP,CAGJ,MAAM,GACV,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,8BAA+B,EACjD,CACJ,EAMM,EAAgB,KAClB,IAAM,EAAiB,SAAS,cAAc,CAAC,QAC/C,CAAA,EAAe,SAAS,CAAG,GAE3B,EAAU,OAAO,CAAC,AAAA,IACd,IAAM,EAAQ,EAAQ,IAAI,CAAC,IAAI,CAAC,MAE1B,EAAc;AAApB;A,mFAE2E,EAAE,EAAQ,KAAK,CAAC,OAAO,EAAE,EAAQ,IAAI,CAAC;AAAtC;A,YAEvE,EAAE,EAAQ,IAAI,CAAC;AAAf,YACA,EAAE,EAAQ,KAAK,CAAC;AAAhB;A,gBAEI,EAAE;AAAF;A;A,gBAGA,EAAE,EAAQ,KAAK;AAAf;A;A,IAGZ,CAAC,AAED,CAAA,EAAe,SAAS,EAAI,CAC5B,EACJ","sources":["<anon>","index.js","Campeon.js"],"sourcesContent":["class $e660c2900c0f5c5f$export$2e2bcd8739ae039 {\n    constructor(data){\n        this.name = data.id;\n        this.title = data.title;\n        this.blurb = data.blurb;\n        this.image = data.image.full;\n        this.tags = data.tags;\n    }\n}\n\n\nconst $dad545c909cfec2d$var$campeones = []; // Array para almacenar los campeones\nconst $dad545c909cfec2d$var$button = document.querySelector(\"#button\");\n$dad545c909cfec2d$var$button.addEventListener(\"click\", ()=>{\n    console.log(\"Bot\\xf3n pulsado\");\n    document.querySelector(\"#button\").style.visibility = \"hidden\";\n    document.querySelector(\"#lista\").style.visibility = \"visible\";\n    $dad545c909cfec2d$var$startcampeones(); // Llamada a la función\n});\n// Función para cargar los campeones\nconst $dad545c909cfec2d$var$startcampeones = async ()=>{\n    console.log(\"Llamada a startcampeones hecha\");\n    try {\n        const respuesta = await fetch(\"https://ddragon.leagueoflegends.com/cdn/13.18.1/data/es_ES/champion.json\");\n        const data = await respuesta.json();\n        // Itera sobre los campeones en data.data\n        const campeonesData = data.data;\n        for(const key in campeonesData)if (campeonesData.hasOwnProperty(key)) {\n            const campeon = new (0, $e660c2900c0f5c5f$export$2e2bcd8739ae039)(campeonesData[key]); // Pasamos el objeto de campeón individual\n            $dad545c909cfec2d$var$pushCampeon(campeon); // Almacena la instancia de Campeon\n        }\n        await $dad545c909cfec2d$var$showCampeones(); // Mostrar campeones después de obtener los datos\n    } catch (error) {\n        console.error(\"Error al obtener campeones:\", error);\n    }\n};\nfunction $dad545c909cfec2d$var$pushCampeon(campeon) {\n    $dad545c909cfec2d$var$campeones.push(campeon); // Almacena el campeón en el array\n}\nconst $dad545c909cfec2d$var$showCampeones = ()=>{\n    const campeonesLista = document.getElementById(\"lista\");\n    campeonesLista.innerHTML = \"\"; // Limpiar antes de agregar\n    $dad545c909cfec2d$var$campeones.forEach((campeon)=>{\n        const roles = campeon.tags.join(\", \"); // Unir los roles en una sola cadena\n        const campeonCard = `\r\n        <div class=\"card\" onclick=\"toggleBlurb(this)\">\r\n            <img src=\"https://ddragon.leagueoflegends.com/cdn/13.18.1/img/champion/${campeon.image}\" alt=\"${campeon.name}\">\r\n            <br>\r\n            ${campeon.name}.<br>\r\n            ${campeon.title}<br>\r\n            <div class=\"roles\">\r\n                ${roles}\r\n            </div>\r\n            <div class=\"blurb\" style=\"display: none;\">\r\n                ${campeon.blurb}\r\n            </div>\r\n        </div>\r\n    `;\n        campeonesLista.innerHTML += campeonCard;\n    });\n};\n\n\n//# sourceMappingURL=index.d98bbd0d.js.map\n","import Campeon from './Campeon.js';\r\n\r\nconst campeones = []; // Array para almacenar los campeones\r\n\r\nconst button = document.querySelector(\"#button\");\r\n\r\nbutton.addEventListener(\"click\", () => {\r\n    console.log(\"Botón pulsado\");\r\n    document.querySelector(\"#button\").style.visibility = \"hidden\";\r\n    document.querySelector(\"#lista\").style.visibility = \"visible\";\r\n    startcampeones(); // Llamada a la función\r\n});\r\n\r\n// Función para cargar los campeones\r\nconst startcampeones = async () => {\r\n    console.log(\"Llamada a startcampeones hecha\");\r\n    try {\r\n        const respuesta = await fetch(\"https://ddragon.leagueoflegends.com/cdn/13.18.1/data/es_ES/champion.json\");\r\n        const data = await respuesta.json();\r\n        \r\n        // Itera sobre los campeones en data.data\r\n        const campeonesData = data.data;\r\n        for (const key in campeonesData) {\r\n            if (campeonesData.hasOwnProperty(key)) {\r\n                const campeon = new Campeon(campeonesData[key]); // Pasamos el objeto de campeón individual\r\n                pushCampeon(campeon); // Almacena la instancia de Campeon\r\n            }\r\n        }\r\n\r\n        await showCampeones(); // Mostrar campeones después de obtener los datos\r\n    } catch (error) {\r\n        console.error(\"Error al obtener campeones:\", error);\r\n    }\r\n};\r\n\r\nfunction pushCampeon(campeon) {\r\n    campeones.push(campeon); // Almacena el campeón en el array\r\n}\r\n\r\nconst showCampeones = () => {\r\n    const campeonesLista = document.getElementById(\"lista\");\r\n    campeonesLista.innerHTML = ''; // Limpiar antes de agregar\r\n\r\n    campeones.forEach(campeon => {\r\n        const roles = campeon.tags.join(\", \"); // Unir los roles en una sola cadena\r\n        \r\n        const campeonCard = `\r\n        <div class=\"card\" onclick=\"toggleBlurb(this)\">\r\n            <img src=\"https://ddragon.leagueoflegends.com/cdn/13.18.1/img/champion/${campeon.image}\" alt=\"${campeon.name}\">\r\n            <br>\r\n            ${campeon.name}.<br>\r\n            ${campeon.title}<br>\r\n            <div class=\"roles\">\r\n                ${roles}\r\n            </div>\r\n            <div class=\"blurb\" style=\"display: none;\">\r\n                ${campeon.blurb}\r\n            </div>\r\n        </div>\r\n    `;\r\n    \r\n    campeonesLista.innerHTML += campeonCard;\r\n    });\r\n};\r\n","export default class Campeon {\r\n    constructor(data) {\r\n        this.name = data.id; \r\n        this.title = data.title;   \r\n        this.blurb = data.blurb;     \r\n        this.image = data.image.full; \r\n        this.tags = data.tags;        \r\n    }\r\n}"],"names":["$e660c2900c0f5c5f$export$2e2bcd8739ae039","constructor","data","name","id","title","blurb","image","full","tags","$dad545c909cfec2d$var$campeones","$dad545c909cfec2d$var$button","document","querySelector","addEventListener","console","log","style","visibility","$dad545c909cfec2d$var$startcampeones","respuesta","fetch","campeonesData","json","key","hasOwnProperty","campeon","push","$dad545c909cfec2d$var$showCampeones","error","campeonesLista","getElementById","innerHTML","forEach","roles","join","campeonCard"],"version":3,"file":"index.d98bbd0d.js.map"}